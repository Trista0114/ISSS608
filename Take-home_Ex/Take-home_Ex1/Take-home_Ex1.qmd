---
title: "Take-home Exercise 1: Creating data visualisation: Ship Performance in the Gulf of Guinea"
author: "Chen.PengWei"
date: "February 1, 2025"
date-modified: "last-modified"
execute:
  echo: true
  eval: true
  warning: false
  freeze: true
---

# 1. Overview

## 1.1 Background

Shipping plays an important role in global trade, facilitating the movement of goods across countries. It is crucial to understanding the profitability of different ship types and the relationship between profit and others variables. Various factors, such as operational costs, voyage revenue and fuel efficiency, may influence a ship’s profitability.

This study is a **practice of data visualization** based on the **business perspective**. Instead of building the model, this study will focus more on how to interpret insights and turn it into the visualization chart. The dataset used in this study is **synthetically generated** and is **not sourced from actual shipping companies or vessels**. The goal in this report is to find how different ship types perform in terms of profit, revenue and cost efficiency by using Exploratory Data Analysis (EDA).

The dataset be used is from Kaggle, ["Ship Performance Clustering Dataset"](https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset), provides various performance metrics, including operational costs, voyage revenue, speed, engine power, and fuel efficiency, enabling a comprehensive practice.

## 1.2 Objective

The entire report is based on a business perspective, which means that all of the charts will focus on profitability. This take-home exercise is aim to do the following analysis by using **Exploratory Data Analysis (EDA) methods** and **ggplot2 functions** :

1️⃣ Profitability Analysis of Different Ship Types

-   Identify which ship type is the most profitable.

-   Determine which ship type generates the highest revenue.

-   Analyze which ship type incurs the lowest operational costs.

2️⃣ Trend Analysis & Profitability Trends

-   Examine ship type trends across different ship types to identify potential performance patterns.

3️⃣ Key Influences on Profitability

-   Use Exploratory Data Analysis (EDA) to uncover relationships between profit and operational metrics.

# 2. Getting Started

::: panel-tabset
## Installing Libraries

```{r}
pacman::p_load(ggplot2,dplyr,DT,crosstalk,patchwork,plotlyhaven,SmartEDA,tidyverse,tidymodels,ggdist,ggridges, ggthemes,colorspace,scales,ggiraph,ggExtra,ggstatsplot,gridExtra,plotly)
```

## Importing Data

The Ship Performance Dataset is a synthetic yet realistic collection of data designed to represent key operational metrics and attributes of various ship types in the Gulf of Guinea from Kaggle, ["Ship Performance Clustering Dataset"](https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset).

```{r}
ship_original <- read_csv("data/Ship_Performance_Dataset.csv")
```

## Understanding Data

The data set consists of 18 variables and 2736 observations. The variables including 12 numerical data and 6 Categorical data. We will do data filtering in the further step and most of the EDA will be associated with profit and ship type, which means not all the variables will be used to analyse in this case.

**Numerical Variable**

-   Speed_Over_Ground_knots: Average speed of the ship over water (in knots).

-   Engine_Power_kW: Engine power output (in kilowatts).

-   Distance_Traveled_nm: Total distance traveled by the ship (in nautical miles).

-   Operational_Cost_USD: Total operational cost per voyage (in USD).

-   Revenue_per_Voyage_USD: Revenue generated per voyage (in USD).

-   Efficiency_nm_per_kWh: Energy efficiency calculated in nautical miles per kilowatt-hour.

-   Draft_meters

-   Cargo_Weight_tons

-   Turnaround_Time_hours

-   Seasonal_Impact_Score

-   Weekly_Voyage_Count

-   Average_Load_Percentage

**Categorical Variable**

-   Ship_Type: Type of ship (e.g., Tanker, Container Ship, Fish Carrier, Bulk Carrier).

-   Route_Type: Shipping route type (e.g., Short-haul, Long-haul, Transoceanic).

-   Engine_Type: Type of engine (e.g., Diesel, Heavy Fuel Oil).

-   Maintenance_Status: Maintenance condition of the ship (e.g., Fair, Critical, Good).

-   Weather_Condition: Prevailing weather conditions during voyages (e.g., Calm, Moderate, Rough).

-   Date: From June 2023 to June 2024

```{r}
ship_original
```
:::

## 2.1 Prepare data

::: panel-tabset
## Filtering Data

Before diving into the profitability analysis of different ship types, we will first filter out the ship type that is "None" which has no meaning and do not contribute to the analysis. There are the total of 136 rows with "None" as the ship type, accounting for around 5% in this dataset.

```{r}
ship = ship_original %>% filter(Ship_Type != "None")
```

## Checking Missing Value

As the result from the code, there is no missing value in this dataset.

```{r}
colSums(is.na(ship))
```

## Creating variable : profit

By analysis the profitability, we need to caculate the variable "profit" by using Revenue_per_Voyage_USD - Operational_Cost_USD. After adding this variable, the updated dataset contains **2,600 rows** and **19 variables**, including the newly created **"profit"** column.

```{r}
ship <- ship %>%
  mutate(profit = Revenue_per_Voyage_USD - Operational_Cost_USD)
```

```{r}
head(ship,10)
```
:::

# 3. **Exploratory Data Analysis**

## 3.1 Distribution and box plot of profit by ship type

The box plot and the distribution shows the profit across four different ship types: Bulk Carrier, Container Ship, Fish Carrier, and Tanker. The plot illustrates that all four ship types have a negative profit, which is an important point and will be discussed in further steps. Despite some variations, the overall profit distributions is similar across ship types, suggesting no big differences in profitability. The median and mean profit for each ship type remains positive and have just slightly differences.

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(ship, aes(x = Ship_Type, y = profit)) +
  stat_halfeye(adjust = 0.5, 
               justification = -0.1,
               .width = 0,
               point_colour = NA,
               fill = "gray",
               alpha = 0.5) +  
  geom_boxplot(width = 0.1, 
               fill = "white", 
               color = "black") +
  stat_summary(fun = mean, 
               geom = "point", 
               size = 1, 
               color = "red", 
               fill = "red") +
  scale_y_continuous(labels = scales::comma) +  
  labs(title = "Profit Distribution by Ship Type",
       x = "Ship Type", 
       y = "Profit (USD)") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))
```

## The code

```{r,eval=FALSE}
ggplot(ship, aes(x = Ship_Type, y = profit)) +
  stat_halfeye(adjust = 0.5, 
               justification = -0.1,
               .width = 0,
               point_colour = NA,
               fill = "gray",
               alpha = 0.5) +  
  geom_boxplot(width = 0.1, 
               fill = "white", 
               color = "black") +
  stat_summary(fun = mean, 
               geom = "point", 
               size = 1, 
               color = "red", 
               fill = "red") +
  scale_y_continuous(labels = scales::comma) +  
  labs(title = "Profit Distribution by Ship Type",
       x = "Ship Type", 
       y = "Profit (USD)") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))
```
:::

## 3.2 Bar chart of average profit by ship type

In the overall point of view in this data, every ship type earn the money. While the differences in profitability among the ship types are not highly significant, Fish Carriers appear to be the most profitable, followed by Container Ships and Bulk Carriers, with Tankers having the lowest average profit. The gap between Fish Carriers and Tanker is around 20,000 USD. Hover to the chart and you can see the tooltip.

::: panel-tabset
## The plot

```{r}
#| echo: false
ship_colors <- c(
  "Tanker" = "#D3A29E", 
  "Container Ship" = "#88939E", 
  "Fish Carrier" = "#A3B18A", 
  "Bulk Carrier" = "#B5A7B2"
)

ship_avg_profit <- ship %>%
  group_by(Ship_Type) %>%
  summarise(Average_Profit = mean(profit, na.rm = TRUE))

y_min <- floor(min(ship_avg_profit$Average_Profit) / 1000) * 1000 
y_max <- ceiling(max(ship_avg_profit$Average_Profit) / 1000) * 1000  
y_breaks <- seq(y_min, y_max, by = 5000)  
y_lower_limit <- y_min - 5000  

tooltip <- function(y, accuracy = 1) {
  profit <- scales::number(y, accuracy = accuracy, big.mark = ",")
  paste("Average Profit: ", profit, " USD")
}


gg_point <- ggplot(data = ship_avg_profit, 
                   aes(x = Ship_Type, y = Average_Profit, fill = Ship_Type)) +
  geom_col_interactive(aes(tooltip = tooltip(Average_Profit), 
                           data_id = Ship_Type)) + 
  scale_fill_manual(values = ship_colors) +  
  scale_y_continuous(breaks = y_breaks, labels = scales::comma) +  
  coord_cartesian(ylim = c(y_lower_limit, y_max)) +  
  labs(title = "Average Profit by Ship Type", 
       x = "Ship Type", y = "Average Profit (USD)") +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 10, angle = 0, hjust = 1),  
    axis.text.x = element_text(size = 12), 
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    legend.position = "none" 
  )

girafe(ggobj = gg_point, width_svg = 8, height_svg = 8 * 0.618,
       options = list(
         opts_hover_inv(css = "opacity: 0.5;"),  
         opts_hover(css = "opacity: 1;")        
       ))
```

## The code

```{r,eval=FALSE}
ship_colors <- c(
  "Tanker" = "#D3A29E", 
  "Container Ship" = "#88939E", 
  "Fish Carrier" = "#A3B18A", 
  "Bulk Carrier" = "#B5A7B2"
)

ship_avg_profit <- ship %>%
  group_by(Ship_Type) %>%
  summarise(Average_Profit = mean(profit, na.rm = TRUE))

y_min <- floor(min(ship_avg_profit$Average_Profit) / 1000) * 1000 
y_max <- ceiling(max(ship_avg_profit$Average_Profit) / 1000) * 1000  
y_breaks <- seq(y_min, y_max, by = 5000)  
y_lower_limit <- y_min - 5000  

tooltip <- function(y, accuracy = 1) {
  profit <- scales::number(y, accuracy = accuracy, big.mark = ",")
  paste("Average Profit: ", profit, " USD")
}


gg_point <- ggplot(data = ship_avg_profit, 
                   aes(x = Ship_Type, y = Average_Profit, fill = Ship_Type)) +
  geom_col_interactive(aes(tooltip = tooltip(Average_Profit), 
                           data_id = Ship_Type)) + 
  scale_fill_manual(values = ship_colors) +  
  scale_y_continuous(breaks = y_breaks, labels = scales::comma) +  
  coord_cartesian(ylim = c(y_lower_limit, y_max)) +  
  labs(title = "Average Profit by Ship Type", 
       x = "Ship Type", y = "Average Profit (USD)") +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 10, angle = 0, hjust = 1),  
    axis.text.x = element_text(size = 12), 
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    legend.position = "none" 
  )

girafe(ggobj = gg_point, width_svg = 8, height_svg = 8 * 0.618,
       options = list(
         opts_hover_inv(css = "opacity: 0.3;"),  
         opts_hover(css = "opacity: 1;")        
       ))
```
:::

## 3.3 Percentage and the numbers of negative profit in ship type

The bar chart displays the number of negative profit voyages for each ship type. The ranking of ship types in terms of negative profit voyages remains consistent with previous analyses of the average profit in ship type. The stacked bar chart illustrates the distribution of profit bins for each ship type, showing the proportion of positive and negative profits within each category. Since the total number of ships in each category is relatively balanced, the percentage of negative profit voyages across ship types does not demonstrate a significant difference.

Overall, while the absolute number of negative profit voyages varies slightly, each ship type experiences a comparable proportion of negative profits, which highlight the idea that profitability challenges are somewhat evenly distributed across ship categories.

::: panel-tabset
## The plot

```{r}
#| echo: false
negative_profit_counts <- ship %>%
  filter(profit < 0) %>%  
  group_by(Ship_Type) %>%
  summarise(
    Negative_Profit_Count = n(),
    Negative_Profit_Percentage = Negative_Profit_Count / sum(Negative_Profit_Count) * 100, 
    .groups = "drop"
  )

lower_limit <- 50
upper_limit <- max(negative_profit_counts$Negative_Profit_Count) * 1.1 


p1 <- ggplot(data = negative_profit_counts, 
             aes(x = Ship_Type, y = Negative_Profit_Count, fill = Ship_Type)) +
  geom_col_interactive(
    aes(tooltip = paste0("Number of Negative Profit Voyages: ", scales::comma(Negative_Profit_Count))),
    show.legend = FALSE
  ) +
  geom_text(aes(label = scales::comma(Negative_Profit_Count)),  
            vjust = -0.5, size = 3) +
  scale_fill_manual(values = ship_colors) +
  scale_y_continuous(labels = scales::comma) +  
  coord_cartesian(ylim = c(lower_limit, upper_limit)) +  # 設定 Y 軸範圍
  labs(
    title = "Number of Negative Profit Voyages by Ship Type",
    x = "Ship Type",
    y = "Number of Voyages with Negative Profit"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.text.x = element_text(size = 10, vjust = 1, hjust = 0.5),
    axis.text.y = element_text(size = 10),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14)
  )

ship_bin <- ship %>%
  mutate(profit_bins = cut(profit,
                           breaks = c(-Inf, 0, Inf),  
                           labels = c("Negative", "Positive"),  
                           include.lowest = TRUE))  

ship_bin <- ship_bin %>% filter(!is.na(profit_bins))

p2 <- ggbarstats(
  data = ship_bin,
  x = profit_bins,
  y = Ship_Type,
  title = "Distribution of Profit Bins by Ship Type",
  results.subtitle = FALSE,
  ggtheme = ggplot2::theme_minimal()
) +
  ggplot2::scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  ggplot2::scale_fill_manual(values = c("Negative" = "salmon", "Positive" = "lightblue")) + 
  ggplot2::theme(
    plot.title = ggplot2::element_text(hjust = 0.5, size = 14, face = "bold")
  )

p1 + p2
```

## The code

```{r,eval=FALSE}
negative_profit_counts <- ship %>%
  filter(profit < 0) %>%  
  group_by(Ship_Type) %>%
  summarise(
    Negative_Profit_Count = n(),
    Negative_Profit_Percentage = Negative_Profit_Count / sum(Negative_Profit_Count) * 100, 
    .groups = "drop"
  )

lower_limit <- 50
upper_limit <- max(negative_profit_counts$Negative_Profit_Count) * 1.1 


p1 <- ggplot(data = negative_profit_counts, 
             aes(x = Ship_Type, y = Negative_Profit_Count, fill = Ship_Type)) +
  geom_col_interactive(
    aes(tooltip = paste0("Number of Negative Profit Voyages: ", scales::comma(Negative_Profit_Count))),
    show.legend = FALSE
  ) +
  geom_text(aes(label = scales::comma(Negative_Profit_Count)),  
            vjust = -0.5, size = 3) +
  scale_fill_manual(values = ship_colors) +
  scale_y_continuous(labels = scales::comma) +  
  coord_cartesian(ylim = c(lower_limit, upper_limit)) +  # 設定 Y 軸範圍
  labs(
    title = "Number of Negative Profit Voyages by Ship Type",
    x = "Ship Type",
    y = "Number of Voyages with Negative Profit"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.text.x = element_text(size = 10, vjust = 1, hjust = 0.5),
    axis.text.y = element_text(size = 10),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14)
  )

ship_bin <- ship %>%
  mutate(profit_bins = cut(profit,
                           breaks = c(-Inf, 0, Inf),  
                           labels = c("Negative", "Positive"),  
                           include.lowest = TRUE))  

ship_bin <- ship_bin %>% filter(!is.na(profit_bins))

p2 <- ggbarstats(
  data = ship_bin,
  x = profit_bins,
  y = Ship_Type,
  title = "Distribution of Profit Bins by Ship Type",
  results.subtitle = FALSE,
  ggtheme = ggplot2::theme_minimal()
) +
  ggplot2::scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  ggplot2::scale_fill_manual(values = c("Negative" = "salmon", "Positive" = "lightblue")) + 
  ggplot2::theme(
    plot.title = ggplot2::element_text(hjust = 0.5, size = 14, face = "bold")
  )

p1 + p2
```
:::

## 3.4 Distrubution of Negative Profit in ship type

Tanker has the highest number of negative profit voyages in the previous plot but the lowest average loss in this box plot. In contrast, Bulk Carrier has fewer loss-making voyages but the highest average loss, indicating larger financial risks per voyage, with the gap around 30,000 USD compared to Tanker.

The Density Plot further supports this. Tanker’s distribution is closer to zero, reflecting smaller losses, while Bulk Carrier skews left, showing higher loss .

This suggests that Tankers experience frequent but moderate losses, while Bulk Carriers face larger but less frequent losses, highlighting different risk profiles for each ship type.

::: panel-tabset
## The plot

```{r}
#| echo: false


negative_profit_ship <- ship %>%
  filter(profit < 0) %>%  
  mutate(Ship_Type = factor(Ship_Type, 
                            levels = rev(c("Bulk Carrier", "Fish Carrier", "Container Ship", "Tanker"))))


p3 <- ggplot(negative_profit_ship, 
       aes(x = profit, y = Ship_Type, fill = Ship_Type)) +
  geom_density_ridges(scale = 5, alpha = 0.8, rel_min_height = 0.01) +  
  scale_fill_manual(values = ship_colors) +  
  scale_x_continuous(labels = scales::comma) + 
  labs(
    title = "Distribution of Negative Profit by Ship Type",
    x = "Profit (USD)",
    y = "Ship Type"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12),
    legend.position = "none"  
  )


mean_values <- negative_profit_ship %>%
  group_by(Ship_Type) %>%
  summarise(mean_profit = mean(profit), .groups = "drop")

p4 <- ggplot(negative_profit_ship, aes(x = Ship_Type, y = profit, fill = Ship_Type)) +
  geom_boxplot(alpha = 0.8, outlier.color = "black", outlier.shape = 16) +  
  scale_fill_manual(values = ship_colors) +  
  scale_y_continuous(labels = scales::comma) +  
  labs(
    title = "Box Plot of Negative Profit by Ship Type",
    x = "Ship Type",
    y = "Profit (USD)"
  ) +

  geom_point(data = mean_values, 
             aes(x = Ship_Type, y = mean_profit), 
             color = "red", 
             size = 2) +

  geom_text(data = mean_values, 
            aes(x = Ship_Type, y = mean_profit, 
                label = paste0(scales::comma(round(mean_profit)))),
            vjust = 1.5, size = 4, color = "black") + 
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12),
    legend.position = "none"
  )

p4 + p3
```

## The code

```{r,eval=FALSE}
negative_profit_ship <- ship %>%
  filter(profit < 0) %>%  
  mutate(Ship_Type = factor(Ship_Type, 
                            levels = rev(c("Bulk Carrier", "Fish Carrier", "Container Ship", "Tanker"))))



p3 <- ggplot(negative_profit_ship, 
       aes(x = profit, y = Ship_Type, fill = Ship_Type)) +
  geom_density_ridges(scale = 5, alpha = 0.8, rel_min_height = 0.01) +  
  scale_fill_manual(values = ship_colors) +  
  scale_x_continuous(labels = scales::comma) + 
  labs(
    title = "Distribution of Negative Profit by Ship Type",
    x = "Profit (USD)",
    y = "Ship Type"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12),
    legend.position = "none"  
  )


mean_values <- negative_profit_ship %>%
  group_by(Ship_Type) %>%
  summarise(mean_profit = mean(profit), .groups = "drop")

p4 <- ggplot(negative_profit_ship, aes(x = Ship_Type, y = profit, fill = Ship_Type)) +
  geom_boxplot(alpha = 0.8, outlier.color = "black", outlier.shape = 16) +  
  scale_fill_manual(values = ship_colors) +  
  scale_y_continuous(labels = scales::comma) +  
  labs(
    title = "Box Plot of Negative Profit by Ship Type",
    x = "Ship Type",
    y = "Profit (USD)"
  ) +

  geom_point(data = mean_values, 
             aes(x = Ship_Type, y = mean_profit), 
             color = "red", 
             size = 2) +

  geom_text(data = mean_values, 
            aes(x = Ship_Type, y = mean_profit, 
                label = paste0(scales::comma(round(mean_profit)))),
            vjust = 1.5, size = 4, color = "black") + 
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12),
    legend.position = "none"
  )

p4 + p3
```
:::

## 3.5 Relationship between Revenue and Cost

::: panel-tabset
## The plot

```{r}
#| echo: false
ggscatterstats(
  data = ship,
  x = Operational_Cost_USD,
  y = Revenue_per_Voyage_USD,
  marginal = FALSE,
  )
```

## The code

```{r,eval=FALSE}
ggscatterstats(
  data = ship,
  x = Operational_Cost_USD,
  y = Revenue_per_Voyage_USD,
  marginal = FALSE,
  )
```
:::

## 3.6 Relationship between Efficiency and Profit

::: panel-tabset
## The plot

```{r}
#| echo: false
ggscatterstats(
  data = ship,
  x = Efficiency_nm_per_kWh,
  y = profit,
  marginal = FALSE,
  )
```

## The code

```{r,eval=FALSE}
ggscatterstats(
  data = ship,
  x = Efficiency_nm_per_kWh,
  y = profit,
  marginal = FALSE,
  )
```
:::

```{r}
ship <- ship %>%
  mutate(Ship_Type = fct_reorder(Ship_Type, Revenue_per_Voyage_USD, median, na.rm = TRUE))

# 計算各 Ship_Type 的中位數
median_values <- ship %>%
  group_by(Ship_Type) %>%
  summarise(Median_Revenue = median(Revenue_per_Voyage_USD, na.rm = TRUE))

# 繪製密度曲線圖
ggplot(ship, aes(x = Revenue_per_Voyage_USD, fill = Ship_Type)) +
  geom_density(alpha = 0.5, color = NA) +  # 半透明填充密度圖
  geom_vline(data = median_values, aes(xintercept = Median_Revenue, color = Ship_Type),
             linetype = "dashed", linewidth = 1, alpha = 0.7) +  # 加上中位數虛線
  scale_fill_brewer(palette = "Set1") +  # 設定不同顏色
  scale_color_brewer(palette = "Set1") +  # 設定中位數虛線顏色
  scale_x_continuous(labels = scales::comma) +  # 確保 x 軸使用逗號格式
  labs(
    title = "Revenue Distribution by Ship Type",
    subtitle = "Density Plot with Median Revenue Lines",
    x = "Revenue per Voyage (USD)",
    y = "Density",
    fill = "Ship Type",
    color = "Ship Type"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5, size = 12),
    axis.title.y = element_text(angle = 90, vjust = 0.5, hjust = 0.5),
    legend.position = "top"
  )
```

```{r}
ship_avg_data <- (ship) %>%
  group_by(Ship_Type) %>%
  summarise(
    Avg_Revenue = mean(Revenue_per_Voyage_USD, na.rm = TRUE),
    Avg_Cost = mean(Operational_Cost_USD, na.rm = TRUE)
  )

y_min_cost <- floor(min(ship_avg_data$Avg_Cost) / 1000) * 1000
y_max_cost <- ceiling(max(ship_avg_data$Avg_Cost) / 1000) * 1000
y_breaks_cost <- seq(y_min_cost, y_max_cost, by = 2000)

y_min_revenue <- floor(min(ship_avg_data$Avg_Revenue) / 1000) * 1000
y_max_revenue <- ceiling(max(ship_avg_data$Avg_Revenue) / 1000) * 1000
y_breaks_revenue <- seq(y_min_revenue, y_max_revenue, by = 10000)


p1 <- ggplot((ship_avg_data), 
             aes(x = Ship_Type, y = Avg_Cost)) +
  geom_col_interactive(
    aes(tooltip = paste0( "Avg Revenue: ", scales::comma(Avg_Revenue), " USD",
                         "\nAvg Cost: ", scales::comma(Avg_Cost), " USD"),
        data_id = Ship_Type),
    fill = "#E15759"
  ) +
  scale_y_continuous(breaks = y_breaks_cost, labels = scales::comma) +  
  coord_cartesian(ylim = c(y_min_cost - 500, y_max_cost)) +  
  labs(title = "Average Operational Cost", x = "Ship Type", y = "Avg Cost (USD)") +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 10, angle = 0, hjust = 1),
    axis.text.x = element_text(size = 5, angle = 0),
    plot.title = element_text(hjust = 0.5, size = 10, face = "bold"),
    axis.title.x = element_text(size = 10),  
    axis.title.y = element_text(size = 10)
  )

p2 <- ggplot((ship_avg_data), 
             aes(x = Ship_Type, y = Avg_Revenue)) +
  geom_col_interactive(
    aes(tooltip = paste0("Avg Revenue: ", scales::comma(Avg_Revenue), " USD",
                         "\nAvg Cost: ", scales::comma(Avg_Cost), " USD"),
        data_id = Ship_Type),
    fill = "lightblue"
  ) +
  scale_y_continuous(breaks = y_breaks_revenue, labels = scales::comma) +  
  coord_cartesian(ylim = c(y_min_revenue - 5000, y_max_revenue)) +  
  labs(title = "Average Revenue per Voyage", x = "Ship Type", y = "Avg Revenue (USD)") +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 10, angle = 0, hjust = 1),
    axis.text.x = element_text(size = 5, angle = 0),
    plot.title = element_text(hjust = 0.5, size = 10, face = "bold"),
    axis.title.x = element_text(size = 10), 
    axis.title.y = element_text(size = 10)
  )
girafe(
  code = print(p1 + p2), 
  width_svg = 6,
  height_svg = 3,
  options = list(
    opts_hover(css = "fill: salmon,lightblue"),
    opts_hover_inv(css = "opacity: 0.3"),
    opts_selection(type = "single") 
  )
)
 
```

The relationship between each variable.

```{r}
ggstatsplot::ggcorrmat(
  data = ship,
  cor.vars = 1:18,
  ggcorrplot.args = list(
    outline.color = "black", 
    hc.order = TRUE, 
    tl.cex = 8,       # ✅ 縮小標籤字體
    tl.srt = 45,      # ✅ 旋轉標籤以避免重疊
    insig = "pch",    # ✅ 保留所有數值，但用透明度區分不顯著

    lab_size = 3      # ✅ 控制數值大小，避免重疊
  ),
  title = "Correlogram for Ship Dataset",
  subtitle = "All correlation coefficients are shown"
)
```
