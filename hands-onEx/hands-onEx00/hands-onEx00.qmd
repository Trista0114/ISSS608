---
title: "Hands-on Exercise 00: Working with tidyverse"
author: "Chen.PengWei"
date-modified: "last-modified"
execute:
  echo: true
  eval: true
  warning: false
  freeze: true
---

## Getting started

Load tidyverse onto r environment by using the code chunk below.

```{r}
pacman::p_load(tidyverse)
```

## Importing data

Code chunk below uses read_csv() of reader to import REALIS2019.csv into r environment as a tibble data.frame.

```{r}
realis_csv <- read.csv("C:/Trista0114/ISSS608/hands-onEx/hands-onEx00/data/REALIS2019.csv")

```

```{r}
realis2019 <- read_csv("C:/Trista0114/ISSS608/hands-onEx/hands-onEx00/data/REALIS2019.csv")
```


```{r}

popdata_fat <- read_csv("C:/Trista0114/ISSS608/hands-onEx/hands-onEx00/data/REALIS2019.csv")
```


## Pivoting data

```{r}

popdata_long <- popdata_fat %>%
  pivot_longer(c(3:21),
               names_to = "Age Group",
               values_to = "Population") 
```


```{r}

write_rds(popdata_long, 'rds/popdata_long.rds')
```


```{r}
#| echo: FALSE
popdata_long <- read_rds("rds/popdata_long.rds")

```

## working with dplyr
```{r}
realis2019_selected <- realis2019 %>%
  select(`Project Name`,
         `Transacted Price ($)`,
         `Unit Price ($ psm)`,
         `Property Type`)
 realis2019_selected
```

```{r}
realis2019_selected <- realis2019 %>%
  select(- `Address`, -`Unit Price ($ psf)`, 
         -`Nett Price($)`, -`Completion Date`, 
         -`Tenure`)
realis2019_selected
```

### working with filter() of dplyr

```{r}
realis2019_filtered <- realis2019_selected %>%
  filter(`Property Type` =="Condominium" |
           `Property Type`== "Apartment") %>%
  filter(`Type of Sale` == "New Sale") %>%
  filter(`Unit Price ($ psm)` <= 13000)
```
### all in one
```{r}
realis2019_end <- realis2019 %>%
  select(`Project Name`,
         `Transacted Price ($)`,
         `Type of Sale`,
         `Unit Price ($ psm)`,
         `Property Type`) %>%
  filter(`Property Type` =="Condominium" |
           `Property Type`== "Apartment") %>%
  filter(`Type of Sale` == "New Sale") %>%
  filter(`Unit Price ($ psm)` <= 13000)
```
## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
