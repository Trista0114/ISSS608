{
  "hash": "9444b0d397e4ab2fcf7c17735639656d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1: Creating data visualisation: Ship Performance in the Gulf of Guinea\"\nauthor: \"Chen.PengWei\"\ndate: \"February 1, 2025\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n\n# 1. Overview\n\n## 1.1 Background\n\nShipping plays an important role in global trade, facilitating the movement of goods across countries. It is crucial to understanding the profitability of different ship types and the relationship between profit and others variables. Various factors, such as operational costs, voyage revenue and fuel efficiency, may influence a ship’s profitability.\n\nThis study is a **practice of data visualization** based on the **business perspective**. Instead of building the model, this study will focus more on how to interpret insights and turn it into the visualization chart. The dataset used in this study is **synthetically generated** and is **not sourced from actual shipping companies or vessels**. The goal in this report is to find how different ship types perform in terms of profit, revenue and cost efficiency by using Exploratory Data Analysis (EDA).\n\nThe dataset be used is from Kaggle, [\"Ship Performance Clustering Dataset\"](https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset), provides various performance metrics, including operational costs, voyage revenue, speed, engine power, and fuel efficiency, enabling a comprehensive practice.\n\n## 1.2 Objective\n\nThe entire report is based on a business perspective, which means that all of the charts will focus on profitability. This take-home exercise is aim to do the following analysis by using **Exploratory Data Analysis (EDA) methods** and **ggplot2 functions** :\n\n1️⃣ Profitability Analysis of Different Ship Types\n\n-   Identify which ship type is the most profitable.\n\n-   Determine which ship type generates the highest revenue.\n\n-   Analyze which ship type incurs the lowest operational costs.\n\n2️⃣ Trend Analysis & Profitability Trends\n\n-   Examine ship type trends across different ship types to identify potential performance patterns.\n\n3️⃣ Key Influences on Profitability\n\n-   Use Exploratory Data Analysis (EDA) to uncover relationships between profit and operational metrics.\n\n# 2. Getting Started\n\n::: panel-tabset\n## Installing Libraries\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggplot2,dplyr,DT,crosstalk,patchwork,plotlyhaven,SmartEDA,tidyverse,tidymodels,ggdist,ggridges, ggthemes,colorspace,scales,ggiraph,ggExtra,ggstatsplot,gridExtra,plotly)\n```\n:::\n\n\n\n\n## Importing Data\n\nThe Ship Performance Dataset is a synthetic yet realistic collection of data designed to represent key operational metrics and attributes of various ship types in the Gulf of Guinea from Kaggle, [\"Ship Performance Clustering Dataset\"](https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_original <- read_csv(\"data/Ship_Performance_Dataset.csv\")\n```\n:::\n\n\n\n\n## Understanding Data\n\nThe data set consists of 18 variables and 2736 observations. The variables including 12 numerical data and 6 Categorical data. We will do data filtering in the further step and most of the EDA will be associated with profit and ship type, which means not all the variables will be used to analyse in this case.\n\n**Numerical Variable**\n\n-   Speed_Over_Ground_knots: Average speed of the ship over water (in knots).\n\n-   Engine_Power_kW: Engine power output (in kilowatts).\n\n-   Distance_Traveled_nm: Total distance traveled by the ship (in nautical miles).\n\n-   Operational_Cost_USD: Total operational cost per voyage (in USD).\n\n-   Revenue_per_Voyage_USD: Revenue generated per voyage (in USD).\n\n-   Efficiency_nm_per_kWh: Energy efficiency calculated in nautical miles per kilowatt-hour.\n\n-   Draft_meters\n\n-   Cargo_Weight_tons\n\n-   Turnaround_Time_hours\n\n-   Seasonal_Impact_Score\n\n-   Weekly_Voyage_Count\n\n-   Average_Load_Percentage\n\n**Categorical Variable**\n\n-   Ship_Type: Type of ship (e.g., Tanker, Container Ship, Fish Carrier, Bulk Carrier).\n\n-   Route_Type: Shipping route type (e.g., Short-haul, Long-haul, Transoceanic).\n\n-   Engine_Type: Type of engine (e.g., Diesel, Heavy Fuel Oil).\n\n-   Maintenance_Status: Maintenance condition of the ship (e.g., Fair, Critical, Good).\n\n-   Weather_Condition: Prevailing weather conditions during voyages (e.g., Calm, Moderate, Rough).\n\n-   Date: From June 2023 to June 2024\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_original\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,736 × 18\n   Date       Ship_Type      Route_Type   Engine_Type         Maintenance_Status\n   <date>     <chr>          <chr>        <chr>               <chr>             \n 1 2023-06-04 Container Ship None         Heavy Fuel Oil (HF… Critical          \n 2 2023-06-11 Fish Carrier   Short-haul   Steam Turbine       Good              \n 3 2023-06-18 Container Ship Long-haul    Diesel              Fair              \n 4 2023-06-25 Bulk Carrier   Transoceanic Steam Turbine       Fair              \n 5 2023-07-02 Fish Carrier   Transoceanic Diesel              Fair              \n 6 2023-07-09 Fish Carrier   Long-haul    Heavy Fuel Oil (HF… Fair              \n 7 2023-07-16 Fish Carrier   Transoceanic Heavy Fuel Oil (HF… Critical          \n 8 2023-07-23 Container Ship Short-haul   Diesel              Critical          \n 9 2023-07-30 None           Coastal      Heavy Fuel Oil (HF… Good              \n10 2023-08-06 Container Ship Long-haul    Diesel              Fair              \n# ℹ 2,726 more rows\n# ℹ 13 more variables: Speed_Over_Ground_knots <dbl>, Engine_Power_kW <dbl>,\n#   Distance_Traveled_nm <dbl>, Draft_meters <dbl>, Weather_Condition <chr>,\n#   Cargo_Weight_tons <dbl>, Operational_Cost_USD <dbl>,\n#   Revenue_per_Voyage_USD <dbl>, Turnaround_Time_hours <dbl>,\n#   Efficiency_nm_per_kWh <dbl>, Seasonal_Impact_Score <dbl>,\n#   Weekly_Voyage_Count <dbl>, Average_Load_Percentage <dbl>\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## 2.1 Prepare data\n\n::: panel-tabset\n## Filtering Data\n\nBefore diving into the profitability analysis of different ship types, we will first filter out the ship type that is \"None\" which has no meaning and do not contribute to the analysis. There are the total of 136 rows with \"None\" as the ship type, accounting for around 5% in this dataset.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship = ship_original %>% filter(Ship_Type != \"None\")\n```\n:::\n\n\n\n\n## Checking Missing Value\n\nAs the result from the code, there is no missing value in this dataset.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(ship))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Date               Ship_Type              Route_Type \n                      0                       0                       0 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                      0                       0                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                      0                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n```\n\n\n:::\n:::\n\n\n\n\n## Creating variable : profit\n\nBy analysis the profitability, we need to caculate the variable \"profit\" by using Revenue_per_Voyage_USD - Operational_Cost_USD. After adding this variable, the updated dataset contains **2,600 rows** and **19 variables**, including the newly created **\"profit\"** column.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship <- ship %>%\n  mutate(profit = Revenue_per_Voyage_USD - Operational_Cost_USD)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ship,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 19\n   Date       Ship_Type      Route_Type   Engine_Type         Maintenance_Status\n   <date>     <chr>          <chr>        <chr>               <chr>             \n 1 2023-06-04 Container Ship None         Heavy Fuel Oil (HF… Critical          \n 2 2023-06-11 Fish Carrier   Short-haul   Steam Turbine       Good              \n 3 2023-06-18 Container Ship Long-haul    Diesel              Fair              \n 4 2023-06-25 Bulk Carrier   Transoceanic Steam Turbine       Fair              \n 5 2023-07-02 Fish Carrier   Transoceanic Diesel              Fair              \n 6 2023-07-09 Fish Carrier   Long-haul    Heavy Fuel Oil (HF… Fair              \n 7 2023-07-16 Fish Carrier   Transoceanic Heavy Fuel Oil (HF… Critical          \n 8 2023-07-23 Container Ship Short-haul   Diesel              Critical          \n 9 2023-08-06 Container Ship Long-haul    Diesel              Fair              \n10 2023-08-13 Fish Carrier   Short-haul   Steam Turbine       Fair              \n# ℹ 14 more variables: Speed_Over_Ground_knots <dbl>, Engine_Power_kW <dbl>,\n#   Distance_Traveled_nm <dbl>, Draft_meters <dbl>, Weather_Condition <chr>,\n#   Cargo_Weight_tons <dbl>, Operational_Cost_USD <dbl>,\n#   Revenue_per_Voyage_USD <dbl>, Turnaround_Time_hours <dbl>,\n#   Efficiency_nm_per_kWh <dbl>, Seasonal_Impact_Score <dbl>,\n#   Weekly_Voyage_Count <dbl>, Average_Load_Percentage <dbl>, profit <dbl>\n```\n\n\n:::\n:::\n\n\n\n:::\n\n# 3. **Exploratory Data Analysis**\n\n## 3.1 Distribution and box plot of profit by ship type\n\nThe box plot and the distribution shows the profit across four different ship types: Bulk Carrier, Container Ship, Fish Carrier, and Tanker. The plot illustrates that all four ship types have a negative profit, which is an important point and will be discussed in further steps. Despite some variations, the overall profit distributions is similar across ship types, suggesting no big differences in profitability. The median and mean profit for each ship type remains positive and have just slightly differences.\n\n::: panel-tabset\n## The plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n## The code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ship, aes(x = Ship_Type, y = profit)) +\n  stat_halfeye(adjust = 0.5, \n               justification = -0.1,\n               .width = 0,\n               point_colour = NA,\n               fill = \"gray\",\n               alpha = 0.5) +  \n  geom_boxplot(width = 0.1, \n               fill = \"white\", \n               color = \"black\") +\n  stat_summary(fun = mean, \n               geom = \"point\", \n               size = 1, \n               color = \"red\", \n               fill = \"red\") +\n  scale_y_continuous(labels = scales::comma) +  \n  labs(title = \"Profit Distribution by Ship Type\",\n       x = \"Ship Type\", \n       y = \"Profit (USD)\") +\n  theme_minimal() + \n  theme(plot.title = element_text(hjust = 0.5))\n```\n:::\n\n\n\n:::\n\n## 3.2 Bar chart of average profit by ship type\n\nIn the overall point of view in this data, every ship type earn the money. While the differences in profitability among the ship types are not highly significant, Fish Carriers appear to be the most profitable, followed by Container Ships and Bulk Carriers, with Tankers having the lowest average profit. The gap between Fish Carriers and Tanker is around 20,000 USD. Hover to the chart and you can see the tooltip.\n\n::: panel-tabset\n## The plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"girafe html-widget html-fill-item\" id=\"htmlwidget-31547a25c0d801b6552d\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-31547a25c0d801b6552d\">{\"x\":{\"html\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' class='ggiraph-svg' role='graphics-document' id='svg_b61e8191_e03f_4aa3_80f7_3318ad93c960' viewBox='0 0 576 355.97'>\\n <defs id='svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_defs'>\\n  <clipPath id='svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_c1'>\\n   <rect x='0' y='0' width='576' height='355.97'/>\\n  <\\/clipPath>\\n  <clipPath id='svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_c2'>\\n   <rect x='59.52' y='23.93' width='511' height='297.58'/>\\n  <\\/clipPath>\\n <\\/defs>\\n <g id='svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_rootg' class='ggiraph-svg-rootg'>\\n  <g clip-path='url(#svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_c1)'>\\n   <rect x='0' y='0' width='576' height='355.97' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.75' stroke-linejoin='round' stroke-linecap='round' class='ggiraph-svg-bg'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_c2)'>\\n   <polyline points='59.52,307.98 570.52,307.98' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,283.82 570.52,283.82' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,235.52 570.52,235.52' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,187.21 570.52,187.21' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,138.90 570.52,138.90' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,90.59 570.52,90.59' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,42.28 570.52,42.28' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,259.67 570.52,259.67' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,211.36 570.52,211.36' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,163.05 570.52,163.05' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,114.75 570.52,114.75' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='59.52,66.44 570.52,66.44' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='132.52,321.51 132.52,23.93' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='254.19,321.51 254.19,23.93' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='375.85,321.51 375.85,23.93' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='497.52,321.51 497.52,23.93' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <rect id='svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_e1' x='77.77' y='140.44' width='109.5' height='2553.96' fill='#B5A7B2' fill-opacity='1' stroke='none' title='Average Profit:  264,340  USD' data-id='Bulk Carrier'/>\\n   <rect id='svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_e2' x='199.44' y='124.23' width='109.5' height='2570.18' fill='#88939E' fill-opacity='1' stroke='none' title='Average Profit:  266,019  USD' data-id='Container Ship'/>\\n   <rect id='svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_e3' x='321.1' y='40.24' width='109.5' height='2654.17' fill='#A3B18A' fill-opacity='1' stroke='none' title='Average Profit:  274,711  USD' data-id='Fish Carrier'/>\\n   <rect id='svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_e4' x='442.77' y='254.49' width='109.5' height='2439.92' fill='#D3A29E' fill-opacity='1' stroke='none' title='Average Profit:  252,536  USD' data-id='Tanker'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_b61e8191_e03f_4aa3_80f7_3318ad93c960_c1)'>\\n   <text x='18.41' y='263.25' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>252,000<\\/text>\\n   <text x='18.41' y='214.94' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>257,000<\\/text>\\n   <text x='18.41' y='166.64' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>262,000<\\/text>\\n   <text x='18.41' y='118.33' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>267,000<\\/text>\\n   <text x='18.41' y='70.02' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>272,000<\\/text>\\n   <text x='100.84' y='335.03' font-size='9pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Bulk Carrier<\\/text>\\n   <text x='214.49' y='335.03' font-size='9pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Container Ship<\\/text>\\n   <text x='344.52' y='335.03' font-size='9pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Fish Carrier<\\/text>\\n   <text x='479.51' y='335.03' font-size='9pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Tanker<\\/text>\\n   <text x='290.65' y='348.17' font-size='8.25pt' font-family='Arial'>Ship Type<\\/text>\\n   <text transform='translate(13.36,224.28) rotate(-90.00)' font-size='8.25pt' font-family='Arial'>Average Profit (USD)<\\/text>\\n   <text x='222.48' y='15.5' font-size='10.5pt' font-weight='bold' font-family='Arial'>Average Profit by Ship Type<\\/text>\\n  <\\/g>\\n <\\/g>\\n<\\/svg>\",\"js\":null,\"uid\":\"svg_b61e8191_e03f_4aa3_80f7_3318ad93c960\",\"ratio\":1.618122977346278,\"settings\":{\"tooltip\":{\"css\":\".tooltip_SVGID_ { padding:5px;background:black;color:white;border-radius:2px;text-align:left; ; position:absolute;pointer-events:none;z-index:999;}\",\"placement\":\"doc\",\"opacity\":0.9,\"offx\":10,\"offy\":10,\"use_cursor_pos\":true,\"use_fill\":false,\"use_stroke\":false,\"delay_over\":200,\"delay_out\":500},\"hover\":{\"css\":\".hover_data_SVGID_ { opacity: 1; }\",\"reactive\":false,\"nearest_distance\":null},\"hover_inv\":{\"css\":\".hover_inv_SVGID_ { opacity: 0.5; }\"},\"hover_key\":{\"css\":\".hover_key_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_key_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_key_SVGID_ { fill:orange;stroke:black; }\\nline.hover_key_SVGID_, polyline.hover_key_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_key_SVGID_, polygon.hover_key_SVGID_, path.hover_key_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_key_SVGID_ { stroke:orange; }\",\"reactive\":true},\"hover_theme\":{\"css\":\".hover_theme_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_theme_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_theme_SVGID_ { fill:orange;stroke:black; }\\nline.hover_theme_SVGID_, polyline.hover_theme_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_theme_SVGID_, polygon.hover_theme_SVGID_, path.hover_theme_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_theme_SVGID_ { stroke:orange; }\",\"reactive\":true},\"select\":{\"css\":\".select_data_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_data_SVGID_ { stroke:none;fill:red; }\\ncircle.select_data_SVGID_ { fill:red;stroke:black; }\\nline.select_data_SVGID_, polyline.select_data_SVGID_ { fill:none;stroke:red; }\\nrect.select_data_SVGID_, polygon.select_data_SVGID_, path.select_data_SVGID_ { fill:red;stroke:none; }\\nimage.select_data_SVGID_ { stroke:red; }\",\"type\":\"multiple\",\"only_shiny\":true,\"selected\":[]},\"select_inv\":{\"css\":\"\"},\"select_key\":{\"css\":\".select_key_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_key_SVGID_ { stroke:none;fill:red; }\\ncircle.select_key_SVGID_ { fill:red;stroke:black; }\\nline.select_key_SVGID_, polyline.select_key_SVGID_ { fill:none;stroke:red; }\\nrect.select_key_SVGID_, polygon.select_key_SVGID_, path.select_key_SVGID_ { fill:red;stroke:none; }\\nimage.select_key_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"select_theme\":{\"css\":\".select_theme_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_theme_SVGID_ { stroke:none;fill:red; }\\ncircle.select_theme_SVGID_ { fill:red;stroke:black; }\\nline.select_theme_SVGID_, polyline.select_theme_SVGID_ { fill:none;stroke:red; }\\nrect.select_theme_SVGID_, polygon.select_theme_SVGID_, path.select_theme_SVGID_ { fill:red;stroke:none; }\\nimage.select_theme_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"zoom\":{\"min\":1,\"max\":1,\"duration\":300},\"toolbar\":{\"position\":\"topright\",\"pngname\":\"diagram\",\"tooltips\":null,\"fixed\":false,\"hidden\":[],\"delay_over\":200,\"delay_out\":500},\"sizing\":{\"rescale\":true,\"width\":1}}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## The code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_colors <- c(\n  \"Tanker\" = \"#D3A29E\", \n  \"Container Ship\" = \"#88939E\", \n  \"Fish Carrier\" = \"#A3B18A\", \n  \"Bulk Carrier\" = \"#B5A7B2\"\n)\n\nship_avg_profit <- ship %>%\n  group_by(Ship_Type) %>%\n  summarise(Average_Profit = mean(profit, na.rm = TRUE))\n\ny_min <- floor(min(ship_avg_profit$Average_Profit) / 1000) * 1000 \ny_max <- ceiling(max(ship_avg_profit$Average_Profit) / 1000) * 1000  \ny_breaks <- seq(y_min, y_max, by = 5000)  \ny_lower_limit <- y_min - 5000  \n\ntooltip <- function(y, accuracy = 1) {\n  profit <- scales::number(y, accuracy = accuracy, big.mark = \",\")\n  paste(\"Average Profit: \", profit, \" USD\")\n}\n\n\ngg_point <- ggplot(data = ship_avg_profit, \n                   aes(x = Ship_Type, y = Average_Profit, fill = Ship_Type)) +\n  geom_col_interactive(aes(tooltip = tooltip(Average_Profit), \n                           data_id = Ship_Type)) + \n  scale_fill_manual(values = ship_colors) +  \n  scale_y_continuous(breaks = y_breaks, labels = scales::comma) +  \n  coord_cartesian(ylim = c(y_lower_limit, y_max)) +  \n  labs(title = \"Average Profit by Ship Type\", \n       x = \"Ship Type\", y = \"Average Profit (USD)\") +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 10, angle = 0, hjust = 1),  \n    axis.text.x = element_text(size = 12), \n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"none\" \n  )\n\ngirafe(ggobj = gg_point, width_svg = 8, height_svg = 8 * 0.618,\n       options = list(\n         opts_hover_inv(css = \"opacity: 0.3;\"),  \n         opts_hover(css = \"opacity: 1;\")        \n       ))\n```\n:::\n\n\n\n:::\n\n## 3.3 Percentage and the numbers of negative profit in ship type\n\nThe bar chart displays the number of negative profit voyages for each ship type. The ranking of ship types in terms of negative profit voyages remains consistent with previous analyses of the average profit in ship type. The stacked bar chart illustrates the distribution of profit bins for each ship type, showing the proportion of positive and negative profits within each category. Since the total number of ships in each category is relatively balanced, the percentage of negative profit voyages across ship types does not demonstrate a significant difference.\n\nOverall, while the absolute number of negative profit voyages varies slightly, each ship type experiences a comparable proportion of negative profits, which highlight the idea that profitability challenges are somewhat evenly distributed across ship categories.\n\n::: panel-tabset\n## The plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n## The code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnegative_profit_counts <- ship %>%\n  filter(profit < 0) %>%  \n  group_by(Ship_Type) %>%\n  summarise(\n    Negative_Profit_Count = n(),\n    Negative_Profit_Percentage = Negative_Profit_Count / sum(Negative_Profit_Count) * 100, \n    .groups = \"drop\"\n  )\n\nlower_limit <- 50\nupper_limit <- max(negative_profit_counts$Negative_Profit_Count) * 1.1 \n\n\np1 <- ggplot(data = negative_profit_counts, \n             aes(x = Ship_Type, y = Negative_Profit_Count, fill = Ship_Type)) +\n  geom_col_interactive(\n    aes(tooltip = paste0(\"Number of Negative Profit Voyages: \", scales::comma(Negative_Profit_Count))),\n    show.legend = FALSE\n  ) +\n  geom_text(aes(label = scales::comma(Negative_Profit_Count)),  \n            vjust = -0.5, size = 3) +\n  scale_fill_manual(values = ship_colors) +\n  scale_y_continuous(labels = scales::comma) +  \n  coord_cartesian(ylim = c(lower_limit, upper_limit)) +  # 設定 Y 軸範圍\n  labs(\n    title = \"Number of Negative Profit Voyages by Ship Type\",\n    x = \"Ship Type\",\n    y = \"Number of Voyages with Negative Profit\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(size = 10, vjust = 1, hjust = 0.5),\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14)\n  )\n\nship_bin <- ship %>%\n  mutate(profit_bins = cut(profit,\n                           breaks = c(-Inf, 0, Inf),  \n                           labels = c(\"Negative\", \"Positive\"),  \n                           include.lowest = TRUE))  \n\nship_bin <- ship_bin %>% filter(!is.na(profit_bins))\n\np2 <- ggbarstats(\n  data = ship_bin,\n  x = profit_bins,\n  y = Ship_Type,\n  title = \"Distribution of Profit Bins by Ship Type\",\n  results.subtitle = FALSE,\n  ggtheme = ggplot2::theme_minimal()\n) +\n  ggplot2::scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  ggplot2::scale_fill_manual(values = c(\"Negative\" = \"salmon\", \"Positive\" = \"lightblue\")) + \n  ggplot2::theme(\n    plot.title = ggplot2::element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n\np1 + p2\n```\n:::\n\n\n\n:::\n\n## 3.4 Distrubution of Negative Profit in ship type\n\nTanker has the highest number of negative profit voyages in the previous plot but the lowest average loss in this box plot. In contrast, Bulk Carrier has fewer loss-making voyages but the highest average loss, indicating larger financial risks per voyage, with the gap around 30,000 USD compared to Tanker.\n\nThe Density Plot further supports this. Tanker’s distribution is closer to zero, reflecting smaller losses, while Bulk Carrier skews left, showing higher loss .\n\nThis suggests that Tankers experience frequent but moderate losses, while Bulk Carriers face larger but less frequent losses, highlighting different risk profiles for each ship type.\n\n::: panel-tabset\n## The plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n## The code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnegative_profit_ship <- ship %>%\n  filter(profit < 0) %>%  \n  mutate(Ship_Type = factor(Ship_Type, \n                            levels = rev(c(\"Bulk Carrier\", \"Fish Carrier\", \"Container Ship\", \"Tanker\"))))\n\n\n\np3 <- ggplot(negative_profit_ship, \n       aes(x = profit, y = Ship_Type, fill = Ship_Type)) +\n  geom_density_ridges(scale = 5, alpha = 0.8, rel_min_height = 0.01) +  \n  scale_fill_manual(values = ship_colors) +  \n  scale_x_continuous(labels = scales::comma) + \n  labs(\n    title = \"Distribution of Negative Profit by Ship Type\",\n    x = \"Profit (USD)\",\n    y = \"Ship Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 9, face = \"bold\"),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    legend.position = \"none\"  \n  )\n\n\nmean_values <- negative_profit_ship %>%\n  group_by(Ship_Type) %>%\n  summarise(mean_profit = mean(profit), .groups = \"drop\")\n\np4 <- ggplot(negative_profit_ship, aes(x = Ship_Type, y = profit, fill = Ship_Type)) +\n  geom_boxplot(alpha = 0.8, outlier.color = \"black\", outlier.shape = 16) +  \n  scale_fill_manual(values = ship_colors) +  \n  scale_y_continuous(labels = scales::comma) +  \n  labs(\n    title = \"Box Plot of Negative Profit by Ship Type\",\n    x = \"Ship Type\",\n    y = \"Profit (USD)\"\n  ) +\n\n  geom_point(data = mean_values, \n             aes(x = Ship_Type, y = mean_profit), \n             color = \"red\", \n             size = 2) +\n\n  geom_text(data = mean_values, \n            aes(x = Ship_Type, y = mean_profit, \n                label = paste0(scales::comma(round(mean_profit)))),\n            vjust = 1.5, size = 4, color = \"black\") + \n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 9, face = \"bold\"),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    legend.position = \"none\"\n  )\n\np4 + p3\n```\n:::\n\n\n\n:::\n\n## 3.5 Relationship between Revenue and Cost\n\n::: panel-tabset\n## The plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n## The code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = ship,\n  x = Operational_Cost_USD,\n  y = Revenue_per_Voyage_USD,\n  marginal = FALSE,\n  )\n```\n:::\n\n\n\n:::\n\n## 3.6 Relationship between Efficiency and Profit\n\n::: panel-tabset\n## The plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n## The code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = ship,\n  x = Efficiency_nm_per_kWh,\n  y = profit,\n  marginal = FALSE,\n  )\n```\n:::\n\n\n\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship <- ship %>%\n  mutate(Ship_Type = fct_reorder(Ship_Type, Revenue_per_Voyage_USD, median, na.rm = TRUE))\n\n# 計算各 Ship_Type 的中位數\nmedian_values <- ship %>%\n  group_by(Ship_Type) %>%\n  summarise(Median_Revenue = median(Revenue_per_Voyage_USD, na.rm = TRUE))\n\n# 繪製密度曲線圖\nggplot(ship, aes(x = Revenue_per_Voyage_USD, fill = Ship_Type)) +\n  geom_density(alpha = 0.5, color = NA) +  # 半透明填充密度圖\n  geom_vline(data = median_values, aes(xintercept = Median_Revenue, color = Ship_Type),\n             linetype = \"dashed\", linewidth = 1, alpha = 0.7) +  # 加上中位數虛線\n  scale_fill_brewer(palette = \"Set1\") +  # 設定不同顏色\n  scale_color_brewer(palette = \"Set1\") +  # 設定中位數虛線顏色\n  scale_x_continuous(labels = scales::comma) +  # 確保 x 軸使用逗號格式\n  labs(\n    title = \"Revenue Distribution by Ship Type\",\n    subtitle = \"Density Plot with Median Revenue Lines\",\n    x = \"Revenue per Voyage (USD)\",\n    y = \"Density\",\n    fill = \"Ship Type\",\n    color = \"Ship Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 12),\n    axis.title.y = element_text(angle = 90, vjust = 0.5, hjust = 0.5),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship_avg_data <- (ship) %>%\n  group_by(Ship_Type) %>%\n  summarise(\n    Avg_Revenue = mean(Revenue_per_Voyage_USD, na.rm = TRUE),\n    Avg_Cost = mean(Operational_Cost_USD, na.rm = TRUE)\n  )\n\ny_min_cost <- floor(min(ship_avg_data$Avg_Cost) / 1000) * 1000\ny_max_cost <- ceiling(max(ship_avg_data$Avg_Cost) / 1000) * 1000\ny_breaks_cost <- seq(y_min_cost, y_max_cost, by = 2000)\n\ny_min_revenue <- floor(min(ship_avg_data$Avg_Revenue) / 1000) * 1000\ny_max_revenue <- ceiling(max(ship_avg_data$Avg_Revenue) / 1000) * 1000\ny_breaks_revenue <- seq(y_min_revenue, y_max_revenue, by = 10000)\n\n\np1 <- ggplot((ship_avg_data), \n             aes(x = Ship_Type, y = Avg_Cost)) +\n  geom_col_interactive(\n    aes(tooltip = paste0( \"Avg Revenue: \", scales::comma(Avg_Revenue), \" USD\",\n                         \"\\nAvg Cost: \", scales::comma(Avg_Cost), \" USD\"),\n        data_id = Ship_Type),\n    fill = \"#E15759\"\n  ) +\n  scale_y_continuous(breaks = y_breaks_cost, labels = scales::comma) +  \n  coord_cartesian(ylim = c(y_min_cost - 500, y_max_cost)) +  \n  labs(title = \"Average Operational Cost\", x = \"Ship Type\", y = \"Avg Cost (USD)\") +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 10, angle = 0, hjust = 1),\n    axis.text.x = element_text(size = 5, angle = 0),\n    plot.title = element_text(hjust = 0.5, size = 10, face = \"bold\"),\n    axis.title.x = element_text(size = 10),  \n    axis.title.y = element_text(size = 10)\n  )\n\np2 <- ggplot((ship_avg_data), \n             aes(x = Ship_Type, y = Avg_Revenue)) +\n  geom_col_interactive(\n    aes(tooltip = paste0(\"Avg Revenue: \", scales::comma(Avg_Revenue), \" USD\",\n                         \"\\nAvg Cost: \", scales::comma(Avg_Cost), \" USD\"),\n        data_id = Ship_Type),\n    fill = \"lightblue\"\n  ) +\n  scale_y_continuous(breaks = y_breaks_revenue, labels = scales::comma) +  \n  coord_cartesian(ylim = c(y_min_revenue - 5000, y_max_revenue)) +  \n  labs(title = \"Average Revenue per Voyage\", x = \"Ship Type\", y = \"Avg Revenue (USD)\") +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 10, angle = 0, hjust = 1),\n    axis.text.x = element_text(size = 5, angle = 0),\n    plot.title = element_text(hjust = 0.5, size = 10, face = \"bold\"),\n    axis.title.x = element_text(size = 10), \n    axis.title.y = element_text(size = 10)\n  )\ngirafe(\n  code = print(p1 + p2), \n  width_svg = 6,\n  height_svg = 3,\n  options = list(\n    opts_hover(css = \"fill: salmon,lightblue\"),\n    opts_hover_inv(css = \"opacity: 0.3\"),\n    opts_selection(type = \"single\") \n  )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"girafe html-widget html-fill-item\" id=\"htmlwidget-52eafdff852d42021c84\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-52eafdff852d42021c84\">{\"x\":{\"html\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' class='ggiraph-svg' role='graphics-document' id='svg_f51596fe_11e0_421c_915b_a74344318a29' viewBox='0 0 432 216'>\\n <defs id='svg_f51596fe_11e0_421c_915b_a74344318a29_defs'>\\n  <clipPath id='svg_f51596fe_11e0_421c_915b_a74344318a29_c1'>\\n   <rect x='0' y='0' width='432' height='216'/>\\n  <\\/clipPath>\\n  <clipPath id='svg_f51596fe_11e0_421c_915b_a74344318a29_c2'>\\n   <rect x='64.07' y='25.7' width='356.97' height='157.77'/>\\n  <\\/clipPath>\\n  <clipPath id='svg_f51596fe_11e0_421c_915b_a74344318a29_c3'>\\n   <rect x='5.48' y='5.48' width='210.52' height='205.04'/>\\n  <\\/clipPath>\\n  <clipPath id='svg_f51596fe_11e0_421c_915b_a74344318a29_c4'>\\n   <rect x='216' y='5.48' width='210.52' height='205.04'/>\\n  <\\/clipPath>\\n  <clipPath id='svg_f51596fe_11e0_421c_915b_a74344318a29_c5'>\\n   <rect x='64.07' y='25.7' width='146.45' height='157.77'/>\\n  <\\/clipPath>\\n  <clipPath id='svg_f51596fe_11e0_421c_915b_a74344318a29_c6'>\\n   <rect x='274.59' y='25.7' width='146.45' height='157.77'/>\\n  <\\/clipPath>\\n <\\/defs>\\n <g id='svg_f51596fe_11e0_421c_915b_a74344318a29_rootg' class='ggiraph-svg-rootg'>\\n  <g clip-path='url(#svg_f51596fe_11e0_421c_915b_a74344318a29_c1)'>\\n   <rect x='0' y='0' width='432' height='216' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.75' stroke-linejoin='round' stroke-linecap='round' class='ggiraph-svg-bg'/>\\n   <rect x='0' y='0' width='432' height='216' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='round'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_f51596fe_11e0_421c_915b_a74344318a29_c5)'>\\n   <polyline points='64.07,143.20 210.52,143.20' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='64.07,99.07 210.52,99.07' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='64.07,54.94 210.52,54.94' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='64.07,165.27 210.52,165.27' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='64.07,121.14 210.52,121.14' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='64.07,77.01 210.52,77.01' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='64.07,32.88 210.52,32.88' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='84.99,183.47 84.99,25.70' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='119.86,183.47 119.86,25.70' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='154.73,183.47 154.73,25.70' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='189.60,183.47 189.60,25.70' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <rect id='svg_f51596fe_11e0_421c_915b_a74344318a29_e1' x='69.3' y='155.8' width='31.38' height='5592.06' fill='#E15759' fill-opacity='1' stroke='none' title='Avg Revenue: 505,965 USD&amp;lt;br/&amp;gt;Avg Cost: 253,429 USD' data-id='Tanker'/>\\n   <rect id='svg_f51596fe_11e0_421c_915b_a74344318a29_e2' x='104.17' y='42.97' width='31.38' height='5704.9' fill='#E15759' fill-opacity='1' stroke='none' title='Avg Revenue: 524,561 USD&amp;lt;br/&amp;gt;Avg Cost: 258,543 USD' data-id='Container Ship'/>\\n   <rect id='svg_f51596fe_11e0_421c_915b_a74344318a29_e3' x='139.04' y='120.8' width='31.38' height='5627.07' fill='#E15759' fill-opacity='1' stroke='none' title='Avg Revenue: 529,727 USD&amp;lt;br/&amp;gt;Avg Cost: 255,015 USD' data-id='Fish Carrier'/>\\n   <rect id='svg_f51596fe_11e0_421c_915b_a74344318a29_e4' x='173.91' y='102.38' width='31.38' height='5645.49' fill='#E15759' fill-opacity='1' stroke='none' title='Avg Revenue: 520,190 USD&amp;lt;br/&amp;gt;Avg Cost: 255,850 USD' data-id='Bulk Carrier'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_f51596fe_11e0_421c_915b_a74344318a29_c1)'>\\n   <text x='22.97' y='168.85' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>253,000<\\/text>\\n   <text x='22.97' y='124.72' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>255,000<\\/text>\\n   <text x='22.97' y='80.59' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>257,000<\\/text>\\n   <text x='22.97' y='36.46' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>259,000<\\/text>\\n   <text x='77.49' y='191.98' font-size='3.75pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Tanker<\\/text>\\n   <text x='103.33' y='191.98' font-size='3.75pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Container Ship<\\/text>\\n   <text x='141.68' y='191.98' font-size='3.75pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Fish Carrier<\\/text>\\n   <text x='176.41' y='191.98' font-size='3.75pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Bulk Carrier<\\/text>\\n   <text x='115.14' y='202.94' font-size='7.5pt' font-family='Arial'>Ship Type<\\/text>\\n   <text transform='translate(18.12,140.07) rotate(-90.00)' font-size='7.5pt' font-family='Arial'>Avg Cost (USD)<\\/text>\\n   <text x='76.06' y='18.12' font-size='7.5pt' font-weight='bold' font-family='Arial'>Average Operational Cost<\\/text>\\n  <\\/g>\\n  <g clip-path='url(#svg_f51596fe_11e0_421c_915b_a74344318a29_c6)'>\\n   <polyline points='274.59,176.30 421.04,176.30' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='274.59,128.49 421.04,128.49' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='274.59,80.68 421.04,80.68' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='274.59,32.88 421.04,32.88' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='0.53' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='274.59,152.40 421.04,152.40' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='274.59,104.59 421.04,104.59' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='274.59,56.78 421.04,56.78' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='295.51,183.47 295.51,25.70' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='330.38,183.47 330.38,25.70' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='365.25,183.47 365.25,25.70' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <polyline points='400.12,183.47 400.12,25.70' fill='none' stroke='#EBEBEB' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <rect id='svg_f51596fe_11e0_421c_915b_a74344318a29_e5' x='279.82' y='147.78' width='31.38' height='2418.96' fill='#ADD8E6' fill-opacity='1' stroke='none' title='Avg Revenue: 505,965 USD&amp;lt;br/&amp;gt;Avg Cost: 253,429 USD' data-id='Tanker'/>\\n   <rect id='svg_f51596fe_11e0_421c_915b_a74344318a29_e6' x='314.69' y='58.88' width='31.38' height='2507.87' fill='#ADD8E6' fill-opacity='1' stroke='none' title='Avg Revenue: 524,561 USD&amp;lt;br/&amp;gt;Avg Cost: 258,543 USD' data-id='Container Ship'/>\\n   <rect id='svg_f51596fe_11e0_421c_915b_a74344318a29_e7' x='349.56' y='34.18' width='31.38' height='2532.56' fill='#ADD8E6' fill-opacity='1' stroke='none' title='Avg Revenue: 529,727 USD&amp;lt;br/&amp;gt;Avg Cost: 255,015 USD' data-id='Fish Carrier'/>\\n   <rect id='svg_f51596fe_11e0_421c_915b_a74344318a29_e8' x='384.43' y='79.78' width='31.38' height='2486.97' fill='#ADD8E6' fill-opacity='1' stroke='none' title='Avg Revenue: 520,190 USD&amp;lt;br/&amp;gt;Avg Cost: 255,850 USD' data-id='Bulk Carrier'/>\\n  <\\/g>\\n  <g clip-path='url(#svg_f51596fe_11e0_421c_915b_a74344318a29_c1)'>\\n   <text x='233.49' y='155.98' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>505,000<\\/text>\\n   <text x='233.49' y='108.17' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>515,000<\\/text>\\n   <text x='233.49' y='60.36' font-size='7.5pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>525,000<\\/text>\\n   <text x='288.01' y='191.98' font-size='3.75pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Tanker<\\/text>\\n   <text x='313.85' y='191.98' font-size='3.75pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Container Ship<\\/text>\\n   <text x='352.2' y='191.98' font-size='3.75pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Fish Carrier<\\/text>\\n   <text x='386.93' y='191.98' font-size='3.75pt' font-family='Arial' fill='#4D4D4D' fill-opacity='1'>Bulk Carrier<\\/text>\\n   <text x='325.66' y='202.94' font-size='7.5pt' font-family='Arial'>Ship Type<\\/text>\\n   <text transform='translate(228.64,149.81) rotate(-90.00)' font-size='7.5pt' font-family='Arial'>Avg Revenue (USD)<\\/text>\\n   <text x='278.04' y='18.12' font-size='7.5pt' font-weight='bold' font-family='Arial'>Average Revenue per Voyage<\\/text>\\n  <\\/g>\\n <\\/g>\\n<\\/svg>\",\"js\":null,\"uid\":\"svg_f51596fe_11e0_421c_915b_a74344318a29\",\"ratio\":2,\"settings\":{\"tooltip\":{\"css\":\".tooltip_SVGID_ { padding:5px;background:black;color:white;border-radius:2px;text-align:left; ; position:absolute;pointer-events:none;z-index:999;}\",\"placement\":\"doc\",\"opacity\":0.9,\"offx\":10,\"offy\":10,\"use_cursor_pos\":true,\"use_fill\":false,\"use_stroke\":false,\"delay_over\":200,\"delay_out\":500},\"hover\":{\"css\":\".hover_data_SVGID_ { fill: salmon,lightblue }\",\"reactive\":false,\"nearest_distance\":null},\"hover_inv\":{\"css\":\".hover_inv_SVGID_ { opacity: 0.3 }\"},\"hover_key\":{\"css\":\".hover_key_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_key_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_key_SVGID_ { fill:orange;stroke:black; }\\nline.hover_key_SVGID_, polyline.hover_key_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_key_SVGID_, polygon.hover_key_SVGID_, path.hover_key_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_key_SVGID_ { stroke:orange; }\",\"reactive\":true},\"hover_theme\":{\"css\":\".hover_theme_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_theme_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_theme_SVGID_ { fill:orange;stroke:black; }\\nline.hover_theme_SVGID_, polyline.hover_theme_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_theme_SVGID_, polygon.hover_theme_SVGID_, path.hover_theme_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_theme_SVGID_ { stroke:orange; }\",\"reactive\":true},\"select\":{\"css\":\".select_data_SVGID_ { fill:red;stroke:gray; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"select_inv\":{\"css\":\"\"},\"select_key\":{\"css\":\".select_key_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_key_SVGID_ { stroke:none;fill:red; }\\ncircle.select_key_SVGID_ { fill:red;stroke:black; }\\nline.select_key_SVGID_, polyline.select_key_SVGID_ { fill:none;stroke:red; }\\nrect.select_key_SVGID_, polygon.select_key_SVGID_, path.select_key_SVGID_ { fill:red;stroke:none; }\\nimage.select_key_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"select_theme\":{\"css\":\".select_theme_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_theme_SVGID_ { stroke:none;fill:red; }\\ncircle.select_theme_SVGID_ { fill:red;stroke:black; }\\nline.select_theme_SVGID_, polyline.select_theme_SVGID_ { fill:none;stroke:red; }\\nrect.select_theme_SVGID_, polygon.select_theme_SVGID_, path.select_theme_SVGID_ { fill:red;stroke:none; }\\nimage.select_theme_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"zoom\":{\"min\":1,\"max\":1,\"duration\":300},\"toolbar\":{\"position\":\"topright\",\"pngname\":\"diagram\",\"tooltips\":null,\"fixed\":false,\"hidden\":[],\"delay_over\":200,\"delay_out\":500},\"sizing\":{\"rescale\":true,\"width\":1}}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nThe relationship between each variable.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggstatsplot::ggcorrmat(\n  data = ship,\n  cor.vars = 1:18,\n  ggcorrplot.args = list(\n    outline.color = \"black\", \n    hc.order = TRUE, \n    tl.cex = 8,       # ✅ 縮小標籤字體\n    tl.srt = 45,      # ✅ 旋轉標籤以避免重疊\n    insig = \"pch\",    # ✅ 保留所有數值，但用透明度區分不顯著\n\n    lab_size = 3      # ✅ 控制數值大小，避免重疊\n  ),\n  title = \"Correlogram for Ship Dataset\",\n  subtitle = \"All correlation coefficients are shown\"\n)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/d3-bundle-5.16.0/d3-bundle.min.js\"></script>\n<script src=\"../../site_libs/d3-lasso-0.0.5/d3-lasso.min.js\"></script>\n<script src=\"../../site_libs/save-svg-as-png-1.4.17/save-svg-as-png.min.js\"></script>\n<script src=\"../../site_libs/flatbush-4.4.0/flatbush.min.js\"></script>\n<link href=\"../../site_libs/ggiraphjs-0.8.10/ggiraphjs.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/ggiraphjs-0.8.10/ggiraphjs.min.js\"></script>\n<script src=\"../../site_libs/girafe-binding-0.8.12/girafe.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}